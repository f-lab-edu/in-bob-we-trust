name: Info-service
on:
  push:
    branches:
      - '123452'
jobs:
  tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        TEST_COMMAND: [ '--info delivery-info-service:integrationTest', '--info delivery-info-service:test' , '--info :delivery-info-service:generateJacocoTestCoverage' ]
    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Start Logging
        run: echo Gradle Build Test Start

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        run: ./gradlew ${{ matrix.TEST_COMMAND }}

  load_test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Java / Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Start Logging
        run: echo Gradle Build Test Start

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Gradle BootJar
        if: success()
        run: ./gradlew :delivery-info-service:build --x test --x integrationTest

      - name: Docker > clean
        if: success()
        run: docker stop $(docker ps -a -q) && docker rm $(docker ps -a -q)  || true

      - name: Docker > clean
        if: success()
        run: docker volume prune

      - name: Docker > build Image
        if: success()
        run: docker image build -t inbobwetrust/delivery-info-service:loadtest ./delivery-info-service

      - name: Docker > create bridge network
        if: success()
        run: docker network create -d bridge inbobwetrust

      - name: Docker > compose up
        if: success()
        run: docker-compose -f ./k6-test/docker-compose-actions.yml up -d

      - name: Verify > Sleep for 10 seconds
        run: sleep 10

      - name: Verify > test wiremock connection
        if: success()
        run: curl --max-time 10 http://localhost:8090/__admin/mappings

      - name: Verify > test wiremock connection
        if: success()
        run: docker container list && curl http://localhost:8888/api/delivery

      - name: K6 > execute permission for k6
        run: chmod +x ./k6-test/k6

      - name: K6 > Test Local
        run: ./k6-test/k6 run  ./k6-test/simple-delivery-get.js &&  ./k6-test/k6 run ./k6-test/process_cpu_usage.js

  build-image:
    needs:
      - load_test
      - tests
    if: success() && github.repository == 'f-lab-edu/in-bob-we-trust' && github.ref == 'refs/heads/main'
    strategy:
      fail-fast: true
      matrix:
        IMAGE_BUILD_DIR_PAIR: [ [ 'delivery-info-service', './delivery-info-service' ] ]
    runs-on: ubuntu-latest

    env:
      MODULE_NAME: delivery-info-service

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 11
        uses: actions/setup-java@v2
        with:
          java-version: '11'
          distribution: 'adopt'
          cache: 'gradle'

      - name: Start Logging
        run: echo Gradle Build Test Start

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Build with Gradle
        run: ./gradlew ${{ env.MODULE_NAME }}:build

      - name: Login to Docker Hub
        if: success()
        uses: actions-hub/docker/login@master
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build image w/ version
        if: success()
        run: docker image build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.IMAGE_BUILD_DIR_PAIR[0]}}:${GITHUB_SHA::7} ${{matrix.IMAGE_BUILD_DIR_PAIR[1]}}

      - name: Push Image w/ version
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.IMAGE_BUILD_DIR_PAIR[0]}}:${GITHUB_SHA::7}

      - name: Build image latest
        if: success()
        run: docker image build -t ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.IMAGE_BUILD_DIR_PAIR[0]}}:latest ${{matrix.IMAGE_BUILD_DIR_PAIR[1]}}
      - name: Push Image latest
        if: success()
        uses: actions-hub/docker@master
        with:
          args: push ${{ secrets.DOCKERHUB_USERNAME }}/${{matrix.IMAGE_BUILD_DIR_PAIR[0]}}:latest
