# Sample Prometheus config
# This assumes that your Prometheus instance can access this application on localhost:8080

global:
  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.
  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).

scrape_configs:

  - job_name: 'delivery-info-service'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: [ !!!PLACE_SERVER_URL_HERE!!! ]

  - job_name: 'delivery-relay-service'
    metrics_path: '/actuator/prometheus'
    scrape_interval: 5s
    static_configs:
      - targets: [ !!!PLACE_SERVER_URL_HERE!!! ]

  - job_name: 'zipkin'
    scrape_interval: 5s
    metrics_path: '/prometheus'
    static_configs:
      - targets: [ !!!PLACE_ZIPKIN_URL_HERE!!! ]
    metric_relabel_configs:
      # Response code count
      - source_labels: [ __name__ ]
        regex: '^status_(\d+)_(.*)$'
        replacement: '${1}'
        target_label: status
      - source_labels: [ __name__ ]
        regex: '^status_(\d+)_(.*)$'
        replacement: '${2}'
        target_label: path
      - source_labels: [ __name__ ]
        regex: '^status_(\d+)_(.*)$'
        replacement: 'http_requests_total'
        target_label: __name__
      # Response time, pending histogram from https://github.com/openzipkin/zipkin/pull/1609
      - source_labels: [ __name__ ]
        regex: '^response_(.*)$'
        replacement: '${1}'
        target_label: path
      - source_labels: [ __name__ ]
        regex: '^response_(.*)$'
        replacement: 'http_request_duration_milliseconds'
        target_label: __name__